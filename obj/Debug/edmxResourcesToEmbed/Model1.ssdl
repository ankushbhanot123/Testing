<?xml version="1.0" encoding="utf-8"?>
<Schema Namespace="dbTestModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
  <EntityType Name="Customer">
    <Key>
      <PropertyRef Name="ID" />
    </Key>
    <Property Name="ID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="CustName" Type="nvarchar" MaxLength="500" />
    <Property Name="Address" Type="nvarchar" MaxLength="1000" />
    <Property Name="Contact" Type="nvarchar" MaxLength="100" />
    <Property Name="EmailID" Type="nvarchar" MaxLength="100" />
    <Property Name="DOB" Type="datetime" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'dbTest.dbo.CustomerOrders' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="CustomerOrders">
    <Key>
      <PropertyRef Name="ID" />
    </Key>
    <Property Name="ID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="CustomerID" Type="int" />
    <Property Name="OrderID" Type="int" />
  </EntityType>
  <EntityType Name="Customers">
    <Key>
      <PropertyRef Name="ID" />
    </Key>
    <Property Name="ID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="CustName" Type="nvarchar" MaxLength="500" />
    <Property Name="Address" Type="nvarchar" MaxLength="1000" />
    <Property Name="Contact" Type="nvarchar" MaxLength="100" />
    <Property Name="EmailID" Type="nvarchar" MaxLength="100" />
    <Property Name="DOB" Type="datetime" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'dbTest.dbo.pp' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="pp">
    <Key>
      <PropertyRef Name="id" />
    </Key>
    <Property Name="id" Type="bigint" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="name" Type="nvarchar" MaxLength="500" />
    <Property Name="address" Type="nvarchar(max)" />
    <Property Name="DOB" Type="datetime" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'dbTest.dbo.Product' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="Product">
    <Key>
      <PropertyRef Name="id" />
    </Key>
    <Property Name="id" Type="bigint" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="Name" Type="nvarchar" MaxLength="500" />
    <Property Name="Category" Type="nvarchar" MaxLength="500" />
    <Property Name="Price" Type="money" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'dbTest.dbo.tbOrder' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="tbOrder">
    <Key>
      <PropertyRef Name="ID" />
    </Key>
    <Property Name="ID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="Amount" Type="money" />
    <Property Name="OrderDate" Type="datetime" />
    <Property Name="ItemCount" Type="int" />
  </EntityType>
  <EntityContainer Name="dbTestModelStoreContainer">
    <EntitySet Name="Customer" EntityType="Self.Customer" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="Customers" EntityType="Self.Customers" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="CustomerOrders" EntityType="Self.CustomerOrders" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [CustomerOrders].[ID] AS [ID], 
    [CustomerOrders].[CustomerID] AS [CustomerID], 
    [CustomerOrders].[OrderID] AS [OrderID]
    FROM [dbo].[CustomerOrders] AS [CustomerOrders]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="pp" EntityType="Self.pp" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [pp].[id] AS [id], 
    [pp].[name] AS [name], 
    [pp].[address] AS [address], 
    [pp].[DOB] AS [DOB]
    FROM [dbo].[pp] AS [pp]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="Product" EntityType="Self.Product" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [Product].[id] AS [id], 
    [Product].[Name] AS [Name], 
    [Product].[Category] AS [Category], 
    [Product].[Price] AS [Price]
    FROM [dbo].[Product] AS [Product]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="tbOrder" EntityType="Self.tbOrder" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [tbOrder].[ID] AS [ID], 
    [tbOrder].[Amount] AS [Amount], 
    [tbOrder].[OrderDate] AS [OrderDate], 
    [tbOrder].[ItemCount] AS [ItemCount]
    FROM [dbo].[tbOrder] AS [tbOrder]</DefiningQuery>
    </EntitySet>
  </EntityContainer>
</Schema>